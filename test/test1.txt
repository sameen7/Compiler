const char multi = '*';
const char divi = '/';
const char add = '+';
const char sub = '-';
const char permu = '0';
const int op_1 = 4, op_2 = 9;
const int num_1 = 1, num_2 = -1, num_3 = +8;
int source[30], _val;
void FullPermutation(int begin,int end){
    int i,tmp;
    if(begin >= end){
        i = 0;
        while(i<end){
            printf("%d ",source[i]);
            i=i+1;
        }
        printf("\n");
    }else{
        i=begin;
        while(i<end){		
            if(i!=begin){
                tmp=source[i];
                source[i]=source[begin];
                source[begin]=tmp;
            }else;
            FullPermutation(begin+1,end);
            if(i!=begin){
                tmp=source[i];
                source[i]=source[begin];
                source[begin]=tmp;
            }else;
            i=i+1;
        }		
    }
}
int subtraction(int s1, int s2){
    return (s1-s2);
}
int addition(int s1, int s2){
    return (s1+s2);
}
int multiplication(int s1, int s2){
    return (s1*s2);
}
int division(int s1, int s2){
    return (s1/s2);
}
void main(){
    char op;
    int n,i,s1,s2,res,num;
    scanf(op, num);
    switch (op) {
        case '-':{
            scanf(s1,s2);
            res=subtraction(s1, s2);
            printf("%d",res);  
	}
        case '+':{ 
            scanf(s1,s2);
            res = addition(s1, s2);
            printf("%d",res);
	}
        case '*':{
            scanf(s1,s2);
            res = multiplication(s1, s2);
            printf("%d",res);
	}
        case '/':{
            scanf(s1,s2);
            res = division(s1, s2);
            printf("%d",res);
	}
        case '0':{
            scanf(n);
            i=0;
	    if(n < 'c'){
		_val = division(op_2, op_1);
		while(i<_val){
                    source[i]=i+1;
		    i=i+1;
                }
		FullPermutation(0, _val);	
	    }else{
		while(i<subtraction(op_2, op_1)){
                    source[i]=i+1;
		    i=i+1;
                }
		FullPermutation(0, subtraction(op_2, op_1));
	    }
	}
        default:
            printf("wrong input!!!");
    }
    switch (num) {
        case 1:{
            printf(num_1);
	}
        case -1:{
            printf(num_2);
	}
        case +8:{
            printf(num_3);
	}
        default:
            printf("wrong input!!!");
    }
}





